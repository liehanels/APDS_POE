version: 2.1

jobs:
  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd BACKEND
            npm install
      - run:
          name: Start server in background
          command: |
            cd BACKEND
            npm start &
      - run:
          name: Wait for server to be ready
          command: |
            while ! curl --silent --fail http://localhost:3001/healthcheck; do
              sleep 1
            done
      - attach_workspace:
          at: ~/workspace
      - run:
          name: SonarQube Analysis
          command: |
            cd BACKEND
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
            echo "Sonar branch value is: " $SONAR_BRANCH
            echo "Sonar org value is : "$SONAR_ORG
            sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="." \
            -Dsonar.c.file.suffixes=- \
            -Dsonar.cpp.file.suffixes=- \
            -Dsonar.objc.file.suffixes=-
          
  newmantest:
    docker:
      - image: circleci/node:18.20.2 # Use a Node.js Docker image with development tools
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install build tools
          command: |
            sudo apt-get update
            sudo apt-get install -y build-essential python3
      - run:
          name: Install dependencies
          command: |
            cd BACKEND
            npm install
      - run:
          name: Remove and Reinstall bcrypt
          command: |
            cd BACKEND
            npm uninstall bcrypt
            npm cache clean --force
            npm install bcrypt@5.0.1 --build-from-source
      - run:
          name: Run Newman tests
          command: |
            cd BACKEND
            npm run test-api
      - attach_workspace:
          at: ~/workspace

workflows:
  version: 2
  sonar_workflow:
    jobs:
      - sonarqube
      - newmantest:
          requires:
            - sonarqube
