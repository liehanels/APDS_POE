{"ast":null,"code":"var _jsxFileName = \"G:\\\\OneDrive\\\\Varsity\\\\2024\\\\Semester 2\\\\APDS7311\\\\APDS_POE\\\\APDS_POE\\\\frontend\\\\src\\\\components\\\\transactionApproval.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Transactions() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const token = localStorage.getItem(\"jwt\");\n  const accountnum = localStorage.getItem(\"accountnum\");\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        const response = await fetch(`https://localhost:3001/transaction/transactions`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch transactions\");\n        }\n        const data = await response.json();\n        setTransactions(data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n    fetchTransactions();\n  }, [accountnum, token]);\n  const updateTransactionStatus = async (id, transactionStatus) => {\n    console.log('Updating transaction', id, 'to status', transactionStatus); // Log the ID and status\n    try {\n      const response = await fetch(`https://localhost:3001/transaction/transactions/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          transactionStatus\n        })\n      });\n      if (response.ok) {\n        const updatedTransaction = await response.json();\n        console.log('Updated transaction:', updatedTransaction);\n        setTransactions(prevTransactions => prevTransactions.map(transaction => transaction._id === id ? updatedTransaction : transaction));\n      } else {\n        console.error('Error updating transaction status', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error updating transaction status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"App\",\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Deny\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.accountnum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.transactionAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.transactionAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => updateTransactionStatus(transaction._id, 'Approved'),\n                children: \"Accept\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => updateTransactionStatus(transaction._id, 'Denied'),\n                children: \"Deny\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Transactions, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Transactions","_s","transactions","setTransactions","token","localStorage","getItem","accountnum","fetchTransactions","response","fetch","method","headers","ok","Error","data","json","error","console","updateTransactionStatus","id","transactionStatus","log","body","JSON","stringify","updatedTransaction","prevTransactions","map","transaction","_id","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","index","transactionAmount","transactionAddress","type","onClick","_c","$RefreshReg$"],"sources":["G:/OneDrive/Varsity/2024/Semester 2/APDS7311/APDS_POE/APDS_POE/frontend/src/components/transactionApproval.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Transactions() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const accountnum = localStorage.getItem(\"accountnum\");\r\n\r\n    useEffect(() => {\r\n        async function fetchTransactions() {\r\n            try {\r\n                const response = await fetch(`https://localhost:3001/transaction/transactions`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`\r\n                    }\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch transactions\");\r\n                }\r\n                const data = await response.json();\r\n                setTransactions(data);\r\n            } catch (error) {\r\n                console.error(\"Error:\", error);\r\n            }\r\n        }\r\n        fetchTransactions();\r\n    }, [accountnum, token]);\r\n\r\n    const updateTransactionStatus = async (id, transactionStatus) => {\r\n        console.log('Updating transaction', id, 'to status', transactionStatus); // Log the ID and status\r\n        try {\r\n          const response = await fetch(`https://localhost:3001/transaction/transactions/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\": `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ transactionStatus })\r\n          });\r\n      \r\n          if (response.ok) {\r\n            const updatedTransaction = await response.json();\r\n            console.log('Updated transaction:', updatedTransaction);\r\n            setTransactions(prevTransactions =>\r\n              prevTransactions.map(transaction =>\r\n                transaction._id === id ? updatedTransaction : transaction\r\n              )\r\n            );\r\n          } else {\r\n            console.error('Error updating transaction status', response.statusText);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating transaction status:', error);\r\n        }\r\n      };\r\n      \r\n    return (\r\n        <div className=\"App-header\">\r\n            <div className=\"transaction-container\">\r\n                <h2 className=\"App\">Transactions</h2>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User</th>\r\n                            <th>Transaction Amount</th>\r\n                            <th>Transaction Address</th>\r\n                            <th>Approve</th>\r\n                            <th>Deny</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {transactions.map((transaction, index) => (\r\n                            <tr key={index}>\r\n                                <td>{transaction.accountnum}</td>\r\n                                <td>{transaction.transactionAmount}</td>\r\n                                <td>{transaction.transactionAddress}</td>\r\n                                <td>\r\n                                    <button type=\"button\" onClick={() => updateTransactionStatus(transaction._id, 'Approved')}>\r\n                                        Accept\r\n                                    </button>\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" onClick={() => updateTransactionStatus(transaction._id, 'Denied')}>\r\n                                        Deny\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}